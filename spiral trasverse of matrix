#include<bits/stdc++.h>
using namespace std;
class solution 
{
vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        vector<int> result;
        int row_start=0,row_end=r-1,column_start=0,column_end=c-1;
        
        while(row_start <= row_end && column_start <= column_end){
            for(int col = column_start;col <= column_end;col++){
                result.push_back(matrix[row_start][col]);
                col++;
            }
            row_start++;
            for(int row = row_start;row <= row_end;row++){
                result.push_back(matrix[row][column_end]);
                row++;
            }
            column_end--;
            for(int col = column_end;col >= column_start;col--){
                result.push_back(matrix[row_end][col]);
                col++;
            }
            row_end--;
            for(int row = row_end;row >= row_start;row--){
                result.push_back(matrix[row][column_start]);
                row++;
            }
            column_start++;
        }
        return result;
}
};
int main(){
    int r,c;
    cin>>r>>c;
    vector<vector<int>> matrix(r);
    for(int i=0;i<r;i++){
        matrix[i].assign(c,0);
        for(int j=0;j<c;j++){
            cin>>matrix[i][j];
        }
        }
        solution ob;
        vector<int> result=ob.spirallytraverse(matrix,r,c);
        for(int i=0;i<result.size();i++){
            cout<<result[i]<<endl;
        }
    return 0;
}
